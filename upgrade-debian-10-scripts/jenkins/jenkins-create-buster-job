#!/home/sileht/workspace/wazo/buster-pkgs/jenkins/venv/bin/python

import argparse
import os
import re

import jenkins
from lxml import etree

server = jenkins.Jenkins(
    os.getenv("JENKINS_URL"),
    username=os.getenv("JENKINS_USER_ID"),
    password=os.getenv("JENKINS_API_TOKEN"),
)
user = server.get_whoami()
version = server.get_version()


parser = argparse.ArgumentParser()
parser.add_argument("--doit", action="store_true")
parser.add_argument("project")
args = parser.parse_args()

master = args.project
buster = "%s-buster" % args.project

xml_raw = server.get_job_config(master)
xml = etree.fromstring(xml_raw.encode())

branch = xml.xpath('scm/branches/hudson.plugins.git.BranchSpec/name')[0]
branch.text = "buster"

print("* branch: %s\n" % branch.text)

builders = xml.xpath('builders/hudson.plugins.parameterizedtrigger.TriggerBuilder')

for builder in builders:
    sub_builders = builder.xpath('configs/*')
    for sub_builder in sub_builders:
        project = sub_builder.find("projects").text
        props = sub_builder.xpath('configs/*/properties')
        print("* %s:" % project)
        if not props:
            print("Nothing to do")
            continue
        prop = props[0]
        prop.text = prop.text.replace("${JOB_NAME}", args.project)
        if project.startswith("build-package"):
            prop.text += "\nBRANCH=buster\nDISTRIBUTION=wazo-dev-buster"
        elif project == "integration-tests-nolock":
            prop.text += "\nBRANCH=buster"
        elif project == "build-docker":
            prop.text = str(re.sub(r"(IMAGE=.*)", r"\1:buster", prop.text))
        else:
            print("Nothing to do")
            continue
        print(prop.text)
        print("")


if args.doit:
    output = etree.tostring(xml)
    server.create_job(buster, output.decode())
    server.build_job(buster)
